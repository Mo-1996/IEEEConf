swirl()
library(swirl)
swirl()
swirl()
1
swirl()
back()
info()
main()
info()
bye()
swrirl()
swrirl()
library(swirl)
swrirl()
swirl()
info()
nxt()
ls()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
install.packages("faraway")
swirl()
install.packages("faraway")
unlink(‘/home/saeid/R/x86_64-pc-linux-gnu-library/3.2’, recursive = TRUE)
unlink("/home/saeid/R/x86_64-pc-linux-gnu-library/3.2", recursive = TRUE)
install.packages("faraway")
install.packages("faraway")
install.packages("faraway",dependencies = TRUE)
link(‘/home/saeid/R/x86_64-pc-linux-gnu-library/3.2’, recursive = TRUE)
link("/home/saeid/R/x86_64-pc-linux-gnu-library/3.2", recursive = TRUE)
install.packages("BCSub")
a = 2
data(sampson)
library(statnet)
update_statnet()
data("faux.magnolia.high")
a = data("faux.magnolia.high")
a
b = faux.magnolia.high
b
a[1]
a[0]
b
plot(a)
plot(b)
data("faux.magnolia.high")
plot(fmh, displayisolates = FALSE, vertex.cex = 0.7)
plot(a, displayisolates = FALSE, vertex.cex = 0.7)
plot(b, displayisolates = FALSE, vertex.cex = 0.7)
plot(b, displayisolates = FALSE, vertex.cex = 0.9)
plot(b, displayisolates = FALSE, vertex.cex = 0.1)
plot(b, displayisolates = FALSE, vertex.cex = 0.3)
plot(b, displayisolates = FALSE, vertex.cex = 0.7)
plot(b, displayisolates = TRUE, vertex.cex = 0.7)
plot(b, displayisolates = FALSE, vertex.cex = 0.7)
table(component.dist(fmh)$csize)
table(component.dist(b)$csize)
table(component.dist(b)$csize)
b
summary(b)
b
summary(b)
plot(fmh, displayisolates = FALSE, vertex.col = "Grade", vertex.cex = 0.7)
plot(b, displayisolates = FALSE, vertex.col = "Grade", vertex.cex = 0.7)
b.degreedist <- table(degree(b, cmode = "indegree"))
degreedist <- table(degree(b, cmode = "indegree"))
summary(b ~ triangle)
> summary(b ~ edges + triangle)
summary(b ~ edges + triangle)
setwd("/home/saeid/R projects/IEEEconf")
library(statnet)
# read the adjacency list from the file
filename <- "com-dblp.csv"
adjList <- read.csv(filename,header=FALSE,stringsAsFactors=FALSE)
library(statnet)
# read the adjacency list from the file
filename <- "com-dblp.csv"
adjList <- read.csv(filename,header=FALSE,stringsAsFactors=FALSE)
# initialize the network
numOfEdges <- nrow(adjList)
for (i in 1:numOfEdges){
print("Hi")
}
adjList[1]
adjList[1,2]
adjList[1,2]
class(adjList[1,2])
library(statnet)
# read the adjacency list from the file
filename <- "com-dblp.csv"
adjList <- read.csv(filename,header=FALSE,stringsAsFactors=FALSE)
# initialize the network
numOfNodes <- 317080
net <- network.initialize(numOfNodes)
# numOfEdges <- nrow(adjList)
# for (i in 1:numOfEdges){
#   print(i)
#
# }
# set network nonzero edges
net[adjList] <- 1
View(net)
library(statnet)
# read the adjacency list from the file
filename <- "com-dblp.csv"
adjList <- read.csv(filename,header=FALSE,stringsAsFactors=FALSE)
# initialize the network
numOfNodes <- 317080
net <- network.initialize(numOfNodes)
numOfEdges <- nrow(adjList)
for (i in 1:numOfEdges){
print(i)
net[adjList[i,1],adjList[i,2]] <- 1
}
rm(list=ls())
library(statnet)
# read the adjacency list from the file
filename <- "com-dblp.csv"
adjList <- read.csv(filename,header=FALSE,stringsAsFactors=FALSE)
# initialize the network
numOfNodes <- 317080
net <- network.initialize(numOfNodes)
numOfEdges <- nrow(adjList)
for (i in 1:numOfEdges){
print(i)
net[adjList[i,1],adjList[i,2]] <- 1
}
View(net)
View(net)
View(net)
for (i in 1:numOfEdges){
print(i)
net[adjList[i,1],adjList[i,2]] <- 1
}
rm(list=ls())
library(statnet)
# read the adjacency list from the file
filename <- "CA-HepTh (9877).csv"
adjList <- read.csv(filename,header=FALSE,stringsAsFactors=FALSE)
# initialize the network
numOfNodes <- 9877
net <- network.initialize(numOfNodes)
numOfEdges <- nrow(adjList)
for (i in 1:numOfEdges){
print(i)
net[adjList[i,1],adjList[i,2]] <- 1
}
# set network nonzero edges
# net[adjList] <- 1
View(adjList)
View(adjList)
library(statnet)
# read the adjacency list from the file
filename <- "CA-HepTh (9877).csv"
adjList <- read.csv(filename,header=FALSE,stringsAsFactors=FALSE)
# initialize the network
numOfNodes <- 9877
net <- network.initialize(numOfNodes)
numOfEdges <- nrow(adjList)
for (i in 1:numOfEdges){
print(adjList[i,1])
# net[adjList[i,1],adjList[i,2]] <- 1
}
numOfEdges <- nrow(adjList)
for (i in 1:numOfEdges){
print(adjList[1,1])
# net[adjList[i,1],adjList[i,2]] <- 1
}
View(adjList)
View(adjList)
library(statnet)
# read the adjacency list from the file
filename <- "CA-HepTh (9877).csv"
adjList <- read.csv(filename,header=FALSE,stringsAsFactors=FALSE)
# initialize the network
numOfNodes <- 9877
net <- network.initialize(numOfNodes)
numOfEdges <- nrow(adjList)
for (i in 1:numOfEdges){
print(adjList[1,2])
# net[adjList[i,1],adjList[i,2]] <- 1
}
View(adjList)
library(statnet)
# read the adjacency list from the file
filename <- "CA-HepTh (9877).csv"
adjList <- read.csv(filename,header=FALSE,stringsAsFactors=FALSE)
# initialize the network
numOfNodes <- 9877
net <- network.initialize(numOfNodes, directed = FALSE)
numOfEdges <- nrow(adjList)
for (i in 1:numOfEdges){
print(i)
net[adjList[i,1],adjList[i,2]] <- 1
}
# set network nonzero edges
# net[adjList] <- 1
library(statnet)
# read the adjacency list from the file
filename <- "com-dblp.csv"
adjList <- read.csv(filename,header=FALSE,stringsAsFactors=FALSE)
# initialize the network
numOfNodes <- 1048575
net <- network.initialize(numOfNodes, directed = FALSE)
numOfEdges <- nrow(adjList)
for (i in 1:numOfEdges){
print(i)
net[adjList[i,1],adjList[i,2]] <- 1
}
rm(list=ls())
library(statnet)
# read the adjacency list from the file
filename <- "CA-HepTh(9877)idfixed.csv"
adjList <- read.csv(filename,header=FALSE,stringsAsFactors=FALSE)
# initialize the network
numOfNodes <- 9877
net <- network.initialize(numOfNodes, directed = FALSE)
numOfEdges <- nrow(adjList)
for (i in 1:numOfEdges){
print(i)
net[adjList[i,1],adjList[i,2]] <- 1
}
save(net, file = filename+".Rdata")
save(paste(filename,".Rdata"))
save(net, paste(filename,".Rdata"))
# set network nonzero edges
# net[adjList] <- 1
save(net, paste(filename,".Rdata"))
numOfEdges <- nrow(adjList)
for (i in 1:numOfEdges){
print(i)
net[adjList[i,1],adjList[i,2]] <- 1
}
rm(list=ls())
library(statnet)
# read the adjacency list from the file
filename <- "CA-HepTh(9877)idfixed"
adjList <- read.csv(paste(filename,".csv"),header=FALSE,stringsAsFactors=FALSE)
# initialize the network
numOfNodes <- 9877
net <- network.initialize(numOfNodes, directed = FALSE)
numOfEdges <- nrow(adjList)
for (i in 1:numOfEdges){
print(i)
net[adjList[i,1],adjList[i,2]] <- 1
}
save(net, paste(filename,".Rdata"))
# set network nonzero edges
# net[adjList] <- 1
rm(list=ls())
library(statnet)
# read the adjacency list from the file
filename <- "CA-HepTh(9877)idfixed"
adjList <- read.csv(paste(filename,".csv"),header=FALSE,stringsAsFactors=FALSE)
# initialize the network
numOfNodes <- 9877
net <- network.initialize(numOfNodes, directed = FALSE)
numOfEdges <- nrow(adjList)
for (i in 1:numOfEdges){
print(i)
net[adjList[i,1],adjList[i,2]] <- 1
}
save(net, paste(filename,".Rdata"))
# set network nonzero edges
# net[adjList] <- 1
rm(list=ls())
library(statnet)
# read the adjacency list from the file
filename <- "CA-HepTh(9877)idfixed"
adjList <- read.csv(paste(filename,".csv"),header=FALSE,stringsAsFactors=FALSE)
# initialize the network
numOfNodes <- 9877
net <- network.initialize(numOfNodes, directed = FALSE)
numOfEdges <- nrow(adjList)
for (i in 1:numOfEdges){
print(i)
net[adjList[i,1],adjList[i,2]] <- 1
}
save(net, paste(filename,".Rdata"))
# set network nonzero edges
# net[adjList] <- 1
# read the adjacency list from the file
filename <- "CA-HepTh(9877)idfixed"
adjList <- read.csv(paste(filename,".csv"),header=FALSE,stringsAsFactors=FALSE)
print('hi')
# initialize the network
numOfNodes <- 9877
net <- network.initialize(numOfNodes, directed = FALSE)
rm(list=ls())
library(statnet)
# read the adjacency list from the file
filename <- "CA-HepTh(9877)idfixed"
adjList <- read.csv(paste(filename,".csv"),header=FALSE,stringsAsFactors=FALSE)
print('hi')
# initialize the network
numOfNodes <- 9877
net <- network.initialize(numOfNodes, directed = FALSE)
numOfEdges <- nrow(adjList)
for (i in 1:numOfEdges){
print(i)
net[adjList[i,1],adjList[i,2]] <- 1
}
rm(list=ls())
library(statnet)
# read the adjacency list from the file
filename <- "CA-HepTh(9877)idfixed"
adjList <- read.csv(paste(filename,".csv"),header=FALSE,stringsAsFactors=FALSE)
print('hi')
# initialize the network
numOfNodes <- 9877
net <- network.initialize(numOfNodes, directed = FALSE)
numOfEdges <- nrow(adjList)
for (i in 1:numOfEdges){
print(i)
net[adjList[i,1],adjList[i,2]] <- 1
}
save(net, paste(filename,".Rdata"))
# set network nonzero edges
# net[adjList] <- 1
rm(list=ls())
library(statnet)
# read the adjacency list from the file
filename <- "CA-HepTh(9877)idfixed"
adjList <- read.csv(paste(filename,".csv"),header=FALSE,stringsAsFactors=FALSE)
print('hi')
# initialize the network
numOfNodes <- 9877
net <- network.initialize(numOfNodes, directed = FALSE)
numOfEdges <- nrow(adjList)
for (i in 1:numOfEdges){
print(i)
net[adjList[i,1],adjList[i,2]] <- 1
}
save(net, paste(filename,".Rdata"))
# set network nonzero edges
# net[adjList] <- 1
nrow(adjList)
read.csv(paste(filename,".csv"),header=FALSE,stringsAsFactors=FALSE)
rm(list=ls())
library(statnet)
# read the adjacency list from the file
filename <- "CA-HepTh(9877)idfixed"
adjList <- read.csv(paste(filename,".csv",sep = ""),header=FALSE,stringsAsFactors=FALSE)
print('hi')
# initialize the network
numOfNodes <- 9877
net <- network.initialize(numOfNodes, directed = FALSE)
numOfEdges <- nrow(adjList)
for (i in 1:numOfEdges){
print(i)
net[adjList[i,1],adjList[i,2]] <- 1
}
rm(list=ls())
library(statnet)
# read the adjacency list from the file
filename <- "CA-HepTh(9877)idfixed"
adjList <- read.csv(paste(filename,".csv",sep = ""),header=FALSE,stringsAsFactors=FALSE)
print('hi')
# initialize the network
numOfNodes <- 9877
net <- network.initialize(numOfNodes, directed = FALSE)
numOfEdges <- nrow(adjList)
for (i in 1:numOfEdges){
print(i)
net[adjList[i,1],adjList[i,2]] <- 1
}
save(net, paste(filename,".Rdata",sep = ""))
# set network nonzero edges
# net[adjList] <- 1
paste(filename, ".Rdata", sep = "")
save(net, file = paste(filename,".Rdata",sep = ""))
load("/home/saeid/R projects/IEEEconf/CA-HepTh(9877)idfixed.Rdata")
